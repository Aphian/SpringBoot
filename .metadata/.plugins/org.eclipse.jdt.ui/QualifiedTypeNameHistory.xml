<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.header.writers.frameoptions.XFrameOptionsHeaderWriter"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Entity"/>
    <fullyQualifiedTypeName name="jakarta.persistence.GeneratedValue"/>
    <fullyQualifiedTypeName name="java.lang.Long"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Column"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="org.apache.catalina.User"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
    <fullyQualifiedTypeName name="jakarta.validation.constraints.NotEmpty"/>
    <fullyQualifiedTypeName name="jakarta.validation.constraints.Email"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Controller"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="com.example.SBB.user.UserCreateForm"/>
    <fullyQualifiedTypeName name="org.springframework.dao.DataIntegrityViolationException"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="lombok.RequiredArgsConstructor"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
    <fullyQualifiedTypeName name="com.example.SBB.user.UserRepository"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.GrantedAuthority"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.authority.SimpleGrantedAuthority"/>
    <fullyQualifiedTypeName name="com.example.SBB.user.UserRole"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationCredentialsNotFoundException"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.util.matcher.AntPathRequestMatcher"/>
    <fullyQualifiedTypeName name="jakarta.persistence.ManyToOne"/>
    <fullyQualifiedTypeName name="groovyjarjarantlr4.v4.parse.ANTLRParser.throwsSpec_return"/>
    <fullyQualifiedTypeName name="com.example.SBB.user.UserService"/>
    <fullyQualifiedTypeName name="com.example.SBB.user.SiteUser"/>
    <fullyQualifiedTypeName name="org.springframework.security.access.AfterInvocationProvider"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.data.repository.config.RepositoryNameSpaceHandler"/>
    <fullyQualifiedTypeName name="com.example.SBB.question.QuestionForm"/>
    <fullyQualifiedTypeName name="com.example.SBB.question.Question"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="com.example.SBB.DataNotFoundException"/>
    <fullyQualifiedTypeName name="java.time.LocalDateTime"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="jakarta.validation.Valid"/>
    <fullyQualifiedTypeName name="com.example.SBB.answer.AnswerForm"/>
    <fullyQualifiedTypeName name="org.springframework.validation.BindingResult"/>
    <fullyQualifiedTypeName name="com.example.SBB.answer.Answer"/>
    <fullyQualifiedTypeName name="java.security.Principal"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="org.springframework.security.access.prepost.PreAuthorize"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.server.ResponseStatusException"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatusCode"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
</qualifiedTypeNameHistroy>
